numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
primes = [] # список с простыми числами
not_primes = [] # список со сложными числами

for i in numbers:
    if i == 1:
        continue
    is_prime = True # сигнал принимает значение Правда, чтобы пропустить число на проверку, т.е. чтобы число использовалось в 9 строчке
    for j in range(2, i): # j - подбор делителей для i. Последний элемент (само число I) не включается
        if i % j == 0: # i (элемент последовательности number) делится на 2, затем на элементы последовательности number, пока не дойдет до значения i, т.е. своего собственного. Если остаток 0 был до завершения цикла перебора делителей, то число делится не только на себя, т.е. оно сложное
            is_prime = False # сигнал принимает значение Ложь, если переменная сложное число (т.е. спокойно поделилось на 2 или 3, например, без остатка).
            break # остановка выполнения строчек 9-12
    if is_prime: # сигнал о том, что переменная простое или сложное число. Если значение True - выполняется строчка 14, False - 15
        primes.append(i)
    else:
        not_primes.append(i)
print(f'Primes: {primes}')
print(f'Not Primes: {not_primes}')